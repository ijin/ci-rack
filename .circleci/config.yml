version: 2
jobs:
  build:
    docker: &defaults
       - image: docker:17.06.2-ce-git
         environment:
           COMPOSE_YML: docker-compose.yml
           CACHE_YML: docker-compose.cache.yml
    working_directory: ~/ci-rack
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            -  v1-images-{{ .Branch }}
      - run:
          name: Load Docker images back from cache
          command: |
            set +o pipefail
            docker load -i /cache/app.tar | true
      - run: docker images
      - run:
          name: Install docker-compose & awscli
          command: |
            apk add --no-cache py-pip
            pip install docker-compose==1.17.1 awscli awscli
      - run:
          name: docker-compose pull
          command: docker-compose -f $COMPOSE_YML -f $CACHE_YML pull
      - run:
          name: docker-compose build
          command: |
            docker-compose -f $COMPOSE_YML -f $CACHE_YML build \
                           --build-arg AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
                           --build-arg AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
                           app
      - run: docker images
      - run:
          name: Save Docker images
          command: |
            mkdir -p /cache
            docker save -o /cache/app.tar cirack_app
      - run: ls -alh /cache/
      - save_cache:
          key: v1-images-{{ .Branch }}-{{ epoch }}
          paths:
            - /cache/app.tar
      - persist_to_workspace:
          root: ~/ci-rack
          paths: ./*

      # test  
      - run:
          name: Run tests
          command: echo "test"

      # deploy (without workflows)
      - run:
          name: deploy
          command: |
            if [[ "$CIRCLE_BRANCH" == "master" ]]; then
              echo "deploying"
              eval $(aws --region ap-northeast-1 ecr get-login --no-include-email)
              AWS_ACCOUNT_ID=$(aws sts get-caller-identity --output text | awk '{print $1}')
              docker tag cirack_app:latest $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/ci-rack:$CIRCLE_SHA1
              time docker push $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/ci-rack:$CIRCLE_SHA1

              #apk update && add ca-certificates && update-ca-certificates
              apk add --no-cache jq curl bash
              curl -L -O https://raw.githubusercontent.com/silinternational/ecs-deploy/master/ecs-deploy
              chmod +x ecs-deploy
              time ./ecs-deploy --region ap-northeast-1 --cluster ci-rack-cluster --service-name sinatra-service --image $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/ci-rack:$CIRCLE_SHA1

            fi

  deploy:
    docker: *defaults
    working_directory: ~/ci-rack
    steps:
      - attach_workspace:
          at: ~/ci-rack
      - run:
          name: Deploy
          command: echo "test"

